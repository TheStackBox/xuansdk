/*global define*/

define([
    'underscore',
    'libs/backbone/models/kurobox-model',
    'libs/backbone/models/kurobox-collection'
], function (_, KuroboxModel, KuroboxCollection) {
    'use strict';

    var RecipientModel = KuroboxModel.extend({
        idAttribute: "screenName",
        defaults: {
            screenName: ''
        },

        fetch: function() {
        },

        parse: function() {
        }
    });

    var RecipientCollection = KuroboxCollection.extend({
        model: RecipientModel,
        fetch: function(options) {
            this.url = 'get_twitter_recipient';
            this.dev_opt = {
                //url: 'json/example.get_smtp_recipient.json',
                method: 'GET',
                app_id: '2000100',
                bypassSession: true,
                param:{module:'twitter_module'}
            }
            KuroboxCollection.prototype.fetch.call(this, options);
        },

        save: function(screenName, options) {
            this.url = 'add_twitter_recipient';
            this.dev_opt = {
                //url: 'json/example.set_timezone.json',
                bypassSession: true,
                method: 'GET',
                app_id: '2000100',
                param: {screenName:screenName, module:'twitter_module'}
            };
            KuroboxCollection.prototype.fetch.call(this, options);
        },

        delete: function(screenName, options) {
            this.url = 'remove_twitter_recipient';
            this.dev_opt = {
                    //url: 'json/example.set_timezone.json',
                    bypassSession: true,
                    method: 'GET',
                    app_id: '2000100',
                    param: { screenName: screenName , module:'twitter_module'}
                };
            KuroboxCollection.prototype.fetch.call(this, options);
        },

        parse: function(data) {
            console.log('data >> ', data)
            return data.response.recipient;
        }
    });

    var RecipientBundle = {
        model: RecipientModel,
        collection: RecipientCollection
    };

    return RecipientBundle;
});
